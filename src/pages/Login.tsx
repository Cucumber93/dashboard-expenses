import { useEffect } from "react";
import { useNavigate } from "react-router-dom";
import liff from "@line/liff";

export default function Login() {
  const navigate = useNavigate();

  useEffect(() => {
    const initLiff = async () => {
      try {
        console.log("üöÄ Initializing LIFF...");
        await liff.init({ liffId: import.meta.env.VITE_LIFF_ID });
        await liff.ready;

        console.log("‚úÖ LIFF initialized.");
        console.log("isLoggedIn:", liff.isLoggedIn());

        // üîπ 1Ô∏è‚É£ ‡∏ñ‡πâ‡∏≤‡∏°‡∏µ user ‡∏≠‡∏¢‡∏π‡πà‡πÅ‡∏•‡πâ‡∏ß ‚Üí ‡∏Ç‡πâ‡∏≤‡∏°‡πÑ‡∏õ‡∏´‡∏ô‡πâ‡∏≤ /
        const savedUser = localStorage.getItem("user");
        if (savedUser) {
          console.log("üë§ Found existing user in localStorage ‚Üí redirect to /");
          navigate("/");
          return;
        }

        // üîπ 2Ô∏è‚É£ ‡∏ñ‡πâ‡∏≤‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà login ‚Üí ‡πÑ‡∏õ‡∏´‡∏ô‡πâ‡∏≤ LINE Login
        if (!liff.isLoggedIn()) {
          console.log("‚û°Ô∏è Redirecting to LINE Login...");
          liff.login({
            redirectUri: "https://dashboard-expenses.onrender.com/login", // ‚úÖ ‡∏ï‡πâ‡∏≠‡∏á‡∏ï‡∏£‡∏á‡∏Å‡∏±‡∏ö domain ‡πÉ‡∏ô LINE Developers
          });
          return;
        }

        // üîπ 3Ô∏è‚É£ ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏à‡∏≤‡∏Å LINE
        const profile = await liff.getProfile();
        const idToken = liff.getIDToken();

        if (!idToken) {
          console.log("‚ùå No ID Token, force re-login.");
          liff.login({
            redirectUri: "https://dashboard-expenses.onrender.com/login",
          });
          return;
        }

        console.log("üë§ Profile:", profile);
        console.log("ü™™ ID Token:", idToken);

        // üîπ 4Ô∏è‚É£ (Optional) ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö token ‡∏Å‡∏±‡∏ö backend
        const res = await fetch(
          `${import.meta.env.VITE_API_BASE_URL}/api/verify-token`,
          {
            method: "POST",
            headers: { "Content-Type": "application/json" },
            body: JSON.stringify({ idToken }),
          }
        );

        const data = await res.json();
        console.log("üßæ Verify result:", data);

        // üîπ 5Ô∏è‚É£ ‡∏ñ‡πâ‡∏≤ token valid ‚Üí ‡πÄ‡∏Å‡πá‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÑ‡∏ß‡πâ‡πÉ‡∏ô localStorage
        if (data.valid) {
          const userData = {
            name: profile.displayName,
            picture: profile.pictureUrl,
            token: idToken,
          };
          localStorage.setItem("user", JSON.stringify(userData));
          console.log("‚úÖ Saved user:", userData);
          navigate("/");
        } else {
          console.log("‚ùå Invalid token, clearing user and re-login...");
          localStorage.removeItem("user");
          liff.login({
            redirectUri: "https://dashboard-expenses.onrender.com/login",
          });
        }
      } catch (err) {
        console.error("üí• LIFF init error:", err);
      }
    };

    initLiff();
  }, [navigate]);

  return (
    <div className="flex flex-col items-center justify-center min-h-screen text-center">
      <h1 className="text-2xl font-bold mb-4">LINE Login</h1>
      <p>‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏Å‡∏≤‡∏£‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö...</p>
    </div>
  );
}
